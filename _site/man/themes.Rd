% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/themes.R
\name{themes}
\alias{set_aesthetics}
\alias{theme_basic}
\alias{theme_blank}
\alias{theme_stroke}
\alias{theme_xaxis}
\alias{theme_xgrid}
\alias{theme_xlab}
\alias{theme_xygrid}
\alias{theme_xylab}
\alias{theme_yaxis}
\alias{theme_ygrid}
\alias{theme_ylab}
\alias{themes}
\title{Customized ggplot themes}
\usage{
set_aesthetics(font_normal, font_semi, font_light, projector)

theme_blank(legend.position = "none", legend.direction = "horizontal",
  font_normal = "Lato", font_semi = "Lato", font_light = "Lato Light",
  font_legend_title = 12, font_legend_label = font_legend_title * 0.8,
  projector = FALSE)

theme_stroke(stroke_size = 0.25, stroke_colour = grey90K)

theme_xaxis(font_normal = "Lato", font_semi = "Lato",
  font_light = "Lato Light", legend.position = "none",
  legend.direction = "horizontal", panel_spacing = 3,
  font_axis_label = 12, font_axis_title = font_axis_label * 1.15,
  font_facet = font_axis_label * 1.15, font_legend_title = font_axis_label,
  font_legend_label = font_axis_label * 0.8, font_subtitle = font_axis_label
  * 1.2, font_title = font_axis_label * 1.3, grey_background = FALSE,
  background_colour = grey10K, projector = FALSE)

theme_yaxis(font_normal = "Lato", font_semi = "Lato",
  font_light = "Lato Light", legend.position = "none",
  legend.direction = "horizontal", panel_spacing = 3,
  font_axis_label = 12, font_axis_title = font_axis_label * 1.15,
  font_facet = font_axis_label * 1.15, font_legend_title = font_axis_label,
  font_legend_label = font_axis_label * 0.8, font_subtitle = font_axis_label
  * 1.2, font_title = font_axis_label * 1.3, grey_background = FALSE,
  background_colour = grey10K, projector = FALSE)

theme_xlab(font_normal = "Lato", font_semi = "Lato",
  font_light = "Lato Light", legend.position = "none",
  legend.direction = "horizontal", panel_spacing = 3,
  font_axis_label = 12, font_axis_title = font_axis_label * 1.15,
  font_facet = font_axis_label * 1.15, font_legend_title = font_axis_label,
  font_legend_label = font_axis_label * 0.8, font_subtitle = font_axis_label
  * 1.2, font_title = font_axis_label * 1.3, grey_background = FALSE,
  background_colour = grey10K, projector = FALSE)

theme_ylab(font_normal = "Lato", font_semi = "Lato",
  font_light = "Lato Light", legend.position = "none",
  legend.direction = "horizontal", panel_spacing = 3,
  font_axis_label = 12, font_axis_title = font_axis_label * 1.15,
  font_facet = font_axis_label * 1.15, font_legend_title = font_axis_label,
  font_legend_label = font_axis_label * 0.8, font_subtitle = font_axis_label
  * 1.2, font_title = font_axis_label * 1.3, grey_background = FALSE,
  background_colour = grey10K, projector = FALSE)

theme_xylab(font_normal = "Lato", font_semi = "Lato",
  font_light = "Lato Light", legend.position = "none",
  legend.direction = "horizontal", panel_spacing = 3,
  font_axis_label = 12, font_axis_title = font_axis_label * 1.15,
  font_facet = font_axis_label * 1.15, font_legend_title = font_axis_label,
  font_legend_label = font_axis_label * 0.8, font_subtitle = font_axis_label
  * 1.2, font_title = font_axis_label * 1.3, grey_background = FALSE,
  background_colour = grey10K, projector = FALSE)

theme_xgrid(font_normal = "Lato", font_semi = "Lato",
  font_light = "Lato Light", legend.position = "none",
  legend.direction = "horizontal", panel_spacing = 3,
  font_axis_label = 12, font_axis_title = font_axis_label * 1.15,
  font_facet = font_axis_label * 1.15, font_legend_title = font_axis_label,
  font_legend_label = font_axis_label * 0.8, font_subtitle = font_axis_label
  * 1.2, font_title = font_axis_label * 1.3, grey_background = FALSE,
  background_colour = grey10K, projector = FALSE)

theme_ygrid(font_normal = "Lato", font_semi = "Lato",
  font_light = "Lato Light", legend.position = "none",
  legend.direction = "horizontal", panel_spacing = 3,
  font_axis_label = 12, font_axis_title = font_axis_label * 1.15,
  font_facet = font_axis_label * 1.15, font_legend_title = font_axis_label,
  font_legend_label = font_axis_label * 0.8, font_title = font_axis_label *
  1.3, font_subtitle = font_axis_label * 1.2, grey_background = FALSE,
  background_colour = grey10K, projector = FALSE)

theme_xygrid(font_normal = "Lato", font_semi = "Lato",
  font_light = "Lato Light", legend.position = "none",
  legend.direction = "horizontal", panel_spacing = 3,
  font_axis_label = 12, font_axis_title = font_axis_label * 1.15,
  font_facet = font_axis_label * 1.15, font_legend_title = font_axis_label,
  font_legend_label = font_axis_label * 0.8, font_subtitle = font_axis_label
  * 1.2, font_title = font_axis_label * 1.3, grey_background = FALSE,
  background_colour = grey10K, projector = FALSE)

theme_basic(font_normal = "Lato", font_semi = "Lato",
  font_light = "Lato Light", legend.position = c(0.85, 0.85),
  legend.direction = "horizontal", panel_spacing = 3,
  font_axis_label = 12, font_axis_title = font_axis_label * 1.15,
  font_facet = font_axis_label * 1.15, font_legend_title = font_axis_label,
  font_legend_label = font_axis_label * 0.8, font_subtitle = font_axis_label
  * 1.2, font_title = font_axis_label * 1.3, grey_background = FALSE,
  background_colour = grey10K, projector = FALSE)
}
\arguments{
\item{font_normal}{(optional) string containing font name for normal text}

\item{font_semi}{(optional) string containing font name for semilight text}

\item{font_light}{(optional) string containing font name for light text}

\item{projector}{(optional) if TRUE, make lines and text bolder for an LCD projector}

\item{legend.position}{(optional) legend position; takes either a ggplot legend position string like `'left'` or a tuple in percent of the x- and y-axes, like `c(0.3, 0.7)`}

\item{legend.direction}{(optional) legend direction; eitehr 'horizontal' or 'vertical'}

\item{font_legend_title}{(optional) value, in points, of the font in the legend title}

\item{font_legend_label}{(optional) value, in points, of the font in the legend values}

\item{panel_spacing}{(optional) number of lines between facet panels}

\item{font_axis_label}{(optional) value, in points, of the font in the axis labels. If changed, will change the other font sizes in the plot unless they are also adjusted.}

\item{font_axis_title}{(optional) value, in points, of the font in the axis titles}

\item{font_facet}{(optional) value, in points, of the font in the facet titles}

\item{font_subtitle}{(optional) value, in points, of the font in the plot subtitle}

\item{font_title}{(optional) value, in points, of the font in the plot title}

\item{grey_background}{(optional) if TRUE, make the background of the plot (but not the panel) background_colour}

\item{background_colour}{(optional) colour argument for the fill of the background, if grey_background == TRUE}
}
\description{
Customized ggplot themes
}
\section{Functions}{
\itemize{
\item \code{set_aesthetics}: Internal function to set aesthetics.

\item \code{theme_blank}: completely blank theme; similar to theme_void but without legend or margins.

\item \code{theme_stroke}: Theme with thin grey border around edge

\item \code{theme_xaxis}: Theme with x labels, x title, and x-axis line; no gridlines

\item \code{theme_yaxis}: Theme with y labels, titles, and y-axis line; no gridlines

\item \code{theme_xlab}: Theme with x-axis labels; no gridlines.

\item \code{theme_ylab}: Theme with y-axis labels; no gridlines.

\item \code{theme_xylab}: Theme with x and y axis labels; no gridlines.

\item \code{theme_xgrid}: Theme with light x-grid lines, x and y axis labels, and x-axis title.

\item \code{theme_ygrid}: Theme with light y-grid lines, x and y axis labels, and y-axis title.

\item \code{theme_xygrid}: Theme with x and y labels, titles, and gridlines

\item \code{theme_basic}: Theme with axis labels, titles, grid lines, axes, and legend.
}}
\examples{
ggplot(mtcars, aes(x = wt, y = mpg, colour = cyl)) + geom_point() + facet_wrap(~am) + ggtitle('Heavier cars have worse gas efficiency') + theme_blank()
ggplot(mtcars, aes(x = wt, y = mpg, colour = cyl)) + geom_point() + facet_wrap(~am) + ggtitle('Heavier cars have worse gas efficiency') + theme_stroke()
ggplot(mtcars, aes(x = wt, y = mpg, colour = cyl)) + geom_point() + facet_wrap(~am) + ggtitle('Heavier cars have worse gas efficiency') + theme_xgrid(legend.position = c(0.8, 0.9), grey_background = TRUE)
ggplot(mtcars, aes(x = wt, y = mpg, colour = cyl)) + geom_point() + facet_wrap(~am) + ggtitle('Heavier cars have worse gas efficiency') + theme_ygrid()
ggplot(mtcars, aes(x = wt, y = mpg, colour = cyl)) + geom_point() + facet_wrap(~am) + ggtitle('Heavier cars have worse gas efficiency', subtitle='data = mtcars') + theme_xygrid()
}

